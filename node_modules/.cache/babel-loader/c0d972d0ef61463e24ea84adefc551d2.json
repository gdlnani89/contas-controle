{"ast":null,"code":"import _slicedToArray from \"/workspace/contas-controle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/workspace/contas-controle/src/pages/donativos/index.js\";\nimport React, { useState } from \"react\";\nimport { Legenda } from \"../../components/legenda\";\nimport { Container, Form, Add, Tabela, H2 } from \"./styles\";\nimport { Dia, Dep, Valor } from \"../../global/styles\";\nimport { formata } from \"../../utils/helper\";\nexport default function Donativos() {\n  const mesArray = [\"Janeiro\", \"Fevereiro\", \"MarÃ§o\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"];\n  const data = new Date();\n\n  const _useState = useState(data.getFullYear()),\n        _useState2 = _slicedToArray(_useState, 2),\n        ano = _useState2[0],\n        setAno = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        mes = _useState4[0],\n        setMes = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        dia = _useState6[0],\n        setDia = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        deposito = _useState8[0],\n        setDeposito = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        om = _useState10[0],\n        setOm = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        cong = _useState12[0],\n        setCong = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        reforma = _useState14[0],\n        setReforma = _useState14[1];\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        lancamento = _useState16[0],\n        setLancamento = _useState16[1];\n\n  const _useState17 = useState([]),\n        _useState18 = _slicedToArray(_useState17, 2),\n        periodo = _useState18[0],\n        setPeriodo = _useState18[1]; //const periodo = [{ mes_ano : '2020', {}}]\n  // useEffect(() => {}, [lancamento]);\n\n\n  const totalOm = lancamento.reduce((a, b) => a + parseFloat(b.om.replace(\",\", \".\")), 0);\n  const totalCong = lancamento.reduce((a, b) => a + parseFloat(b.cong.replace(\",\", \".\")), 0);\n  const totalReforma = lancamento.reduce((a, b) => a + parseFloat(b.reforma.replace(\",\", \".\")), 0);\n  const totalDeposito = lancamento.map(i => parseFloat(i.om) + parseFloat(i.cong) + parseFloat(i.reforma)).reduce((a, b) => a + b, 0);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Legenda, {\n    ano: ano,\n    mesLista: mesArray,\n    mesAtual: mes,\n    mudaMes: e => setMes(e.target.value),\n    mudaAno: e => setAno(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dia, {\n    id: \"dia\",\n    type: \"date\",\n    value: dia,\n    onChange: e => setDia(e.target.value),\n    placeholder: \"Dia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Dep, {\n    value: deposito,\n    type: \"number\",\n    onChange: e => setDeposito(e.target.value),\n    placeholder: \"Depositado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Valor, {\n    value: om,\n    type: \"number\",\n    onChange: e => setOm(e.target.value),\n    placeholder: \"Obra Mundial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Valor, {\n    value: cong,\n    type: \"number\",\n    onChange: e => setCong(e.target.value),\n    placeholder: \"Congrega\\xE7\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Valor, {\n    value: reforma,\n    type: \"number\",\n    onChange: e => {\n      setReforma(e.target.value);\n    },\n    placeholder: \"Reforma Betel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Add, {\n    onClick: e => {\n      e.preventDefault();\n\n      if (dia && deposito && om && cong && reforma) {\n        setLancamento([...lancamento, {\n          dia,\n          deposito,\n          om,\n          cong,\n          reforma\n        }]);\n        setDia(\"\");\n        setDeposito(\"\");\n        setOm(\"\");\n        setCong(\"\");\n        setReforma(\"\");\n        document.getElementById(\"dia\").focus();\n      } else {\n        alert(\"preencha todos os campos\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Adicionar\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabela, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"cabecalho\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Dia\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"Depositado\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Obra Mundial\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Congrega\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Reforma Betel\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Dep\\xF3sito\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, lancamento.map((i, id) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, i.dia), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, i.deposito), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, formata(parseFloat(i.om))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, formata(parseFloat(i.cong))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, formata(parseFloat(i.reforma))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, formata(parseFloat(i.om.replace(\",\", \".\")) + parseFloat(i.cong.replace(\",\", \".\")) + parseFloat(i.reforma.replace(\",\", \".\"))))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, formata(totalOm)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, formata(totalCong)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, formata(totalReforma)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, formata(totalDeposito))))), /*#__PURE__*/React.createElement(H2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"Enviar \", formata(totalOm + totalReforma), \" para Betel\"), /*#__PURE__*/React.createElement(Add, {\n    onClick: e => {\n      e.preventDefault();\n\n      if (ano && mes) {\n        setPeriodo([...periodo, {\n          ano,\n          mes,\n          lancamento\n        }]);\n      } else {\n        alert(\"Ano e mÃªs devem estar preenchido\");\n      }\n\n      console.log(periodo);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, \"Salvar\")));\n}","map":{"version":3,"sources":["/workspace/contas-controle/src/pages/donativos/index.js"],"names":["React","useState","Legenda","Container","Form","Add","Tabela","H2","Dia","Dep","Valor","formata","Donativos","mesArray","data","Date","getFullYear","ano","setAno","mes","setMes","dia","setDia","deposito","setDeposito","om","setOm","cong","setCong","reforma","setReforma","lancamento","setLancamento","periodo","setPeriodo","totalOm","reduce","a","b","parseFloat","replace","totalCong","totalReforma","totalDeposito","map","i","e","target","value","preventDefault","document","getElementById","focus","alert","id","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Legenda } from \"../../components/legenda\";\r\n\r\nimport { Container, Form, Add, Tabela, H2 } from \"./styles\";\r\n\r\nimport { Dia, Dep, Valor } from \"../../global/styles\";\r\n\r\nimport { formata } from \"../../utils/helper\";\r\n\r\nexport default function Donativos() {\r\n  const mesArray = [\r\n    \"Janeiro\",\r\n    \"Fevereiro\",\r\n    \"MarÃ§o\",\r\n    \"Abril\",\r\n    \"Maio\",\r\n    \"Junho\",\r\n    \"Julho\",\r\n    \"Agosto\",\r\n    \"Setembro\",\r\n    \"Outubro\",\r\n    \"Novembro\",\r\n    \"Dezembro\"\r\n  ];\r\n  const data = new Date();\r\n  const [ano, setAno] = useState(data.getFullYear());\r\n  const [mes, setMes] = useState(\"\");\r\n  const [dia, setDia] = useState(\"\");\r\n  const [deposito, setDeposito] = useState(\"\");\r\n  const [om, setOm] = useState(\"\");\r\n  const [cong, setCong] = useState(\"\");\r\n  const [reforma, setReforma] = useState(\"\");\r\n  const [lancamento, setLancamento] = useState([]);\r\n  const [periodo, setPeriodo] = useState([]);\r\n  //const periodo = [{ mes_ano : '2020', {}}]\r\n\r\n  // useEffect(() => {}, [lancamento]);\r\n\r\n  const totalOm = lancamento.reduce(\r\n    (a, b) => a + parseFloat(b.om.replace(\",\", \".\")),\r\n    0\r\n  );\r\n\r\n  const totalCong = lancamento.reduce(\r\n    (a, b) => a + parseFloat(b.cong.replace(\",\", \".\")),\r\n    0\r\n  );\r\n\r\n  const totalReforma = lancamento.reduce(\r\n    (a, b) => a + parseFloat(b.reforma.replace(\",\", \".\")),\r\n    0\r\n  );\r\n\r\n  const totalDeposito = lancamento\r\n    .map(i => parseFloat(i.om) + parseFloat(i.cong) + parseFloat(i.reforma))\r\n    .reduce((a, b) => a + b, 0);\r\n\r\n  return (\r\n    <>\r\n      <Legenda\r\n        ano={ano}\r\n        mesLista={mesArray}\r\n        mesAtual={mes}\r\n        mudaMes={e => setMes(e.target.value)}\r\n        mudaAno={e => setAno(e.target.value)}\r\n      />\r\n\r\n      <Form>\r\n        <Dia\r\n          id=\"dia\"\r\n          type=\"date\"\r\n          value={dia}\r\n          onChange={e => setDia(e.target.value)}\r\n          placeholder=\"Dia\"\r\n        />\r\n        <Dep\r\n          value={deposito}\r\n          type=\"number\"\r\n          onChange={e => setDeposito(e.target.value)}\r\n          placeholder=\"Depositado\"\r\n        />\r\n        <Valor\r\n          value={om}\r\n          type=\"number\"\r\n          onChange={e => setOm(e.target.value)}\r\n          placeholder=\"Obra Mundial\"\r\n        />\r\n        <Valor\r\n          value={cong}\r\n          type=\"number\"\r\n          onChange={e => setCong(e.target.value)}\r\n          placeholder=\"CongregaÃ§Ã£o\"\r\n        />\r\n        <Valor\r\n          value={reforma}\r\n          type=\"number\"\r\n          onChange={e => {\r\n            setReforma(e.target.value);\r\n          }}\r\n          placeholder=\"Reforma Betel\"\r\n        />\r\n        <Add\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            if (dia && deposito && om && cong && reforma) {\r\n              setLancamento([\r\n                ...lancamento,\r\n                { dia, deposito, om, cong, reforma }\r\n              ]);\r\n              setDia(\"\");\r\n              setDeposito(\"\");\r\n              setOm(\"\");\r\n              setCong(\"\");\r\n              setReforma(\"\");\r\n              document.getElementById(\"dia\").focus();\r\n            } else {\r\n              alert(\"preencha todos os campos\");\r\n            }\r\n          }}\r\n        >\r\n          Adicionar\r\n        </Add>\r\n      </Form>\r\n      <Container>\r\n        <Tabela>\r\n          <thead>\r\n            <tr key={\"cabecalho\"}>\r\n              <th>Dia</th>\r\n              <th>Depositado</th>\r\n              <th>Obra Mundial</th>\r\n              <th>CongregaÃ§Ã£o</th>\r\n              <th>Reforma Betel</th>\r\n              <th>DepÃ³sito</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lancamento.map((i, id) => (\r\n              <tr key={id}>\r\n                <td>{i.dia}</td>\r\n                <td>{i.deposito}</td>\r\n                <td>{formata(parseFloat(i.om))}</td>\r\n                <td>{formata(parseFloat(i.cong))}</td>\r\n                <td>{formata(parseFloat(i.reforma))}</td>\r\n                <td>\r\n                  {formata(\r\n                    parseFloat(i.om.replace(\",\", \".\")) +\r\n                      parseFloat(i.cong.replace(\",\", \".\")) +\r\n                      parseFloat(i.reforma.replace(\",\", \".\"))\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td colSpan=\"2\">Total</td>\r\n              <td>\r\n                {/* OM */}\r\n                {formata(totalOm)}\r\n              </td>\r\n              <td>\r\n                {/* congregaÃ§Ã£o */}\r\n                {formata(totalCong)}\r\n              </td>\r\n              <td>\r\n                {/* reforma betel */}\r\n                {formata(totalReforma)}\r\n              </td>\r\n              <td>\r\n                {/* depositos */}\r\n                {formata(totalDeposito)}\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </Tabela>\r\n        <H2>Enviar {formata(totalOm + totalReforma)} para Betel</H2>\r\n        <Add\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            if (ano && mes) {\r\n              setPeriodo([\r\n                ...periodo,\r\n                {\r\n                  ano,\r\n                  mes,\r\n                  lancamento\r\n                }\r\n              ]);\r\n            } else {\r\n              alert(\"Ano e mÃªs devem estar preenchido\");\r\n            }\r\n            console.log(periodo);\r\n          }}\r\n        >\r\n          Salvar\r\n        </Add>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}